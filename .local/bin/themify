#!/bin/bash

# Directory containing wallpapers
WALL_DIR="$HOME/Pictures/Wallpapers"
CWD="$(pwd)"
cd "$WALL_DIR" || exit

IFS=$'\n'

# Ask user to pick a wallpaper
SELECTED_WALL=$(for a in *.jpg *.png; do
    echo -en "$a\x00icon\x1f$WALL_DIR/$a\n"
done | rofi -dmenu -p "Choose a wallpaper" -show-icons)

# If user cancels
[ -z "$SELECTED_WALL" ] && exit

# Extract the filename (Rofi returns full text, may include icon metadata)
WALLPAPER_PATH="$WALL_DIR/$(basename "$SELECTED_WALL")"

# Notify user
notify-send "Changing Theme" "Applying wallpaper and updating colors..."

# Set wallpaper via swww
swww img "$WALLPAPER_PATH" --transition-type center --transition-fps 60

# Generate colors with wallust
if ! wallust run "$WALLPAPER_PATH"; then
    notify-send "Wallust Failed" "Trying fallback..."
    wallust run "$WALLPAPER_PATH" --backend thumb || {
        notify-send "Error" "Could not generate colors from this image"
        exit 1
    }
fi

# Reload kitty colors
pkill -USR1 kitty 2>/dev/null

# Reload Waybar and Swaync
pkill waybar
sleep 1
waybar > /dev/null 2>&1 &

pkill swaync
sleep 1
swaync > /dev/null 2>&1 &

notify-send "Theme Applied" "Wallpaper and theme updated successfully!"

# Return to original directory
cd "$CWD" || exit

